javascript:
  function charcount(str) {
    let lng = ((str || '').match(/./g) || []).length;
    lng += ((str || '').match(/\n/g) || []).length
    document.getElementById("charcount").innerHTML = lng + '/200';
  }

= form_for(@user ||= User.new, html: { novalidate: true }) do |f|
  input type="text" style="display:none"
  input type="password" style="display:none"

  .row
    .col-lg-6
      .card
        .card-header
          b User Credentials

        .card-body
          = f.label :email
          - unless @user.email_verified?
            br
            small style='color: grey;'
              - if @user.verified?
                | Your email address
              - else
                | Your account
              |  has not yet been verified.
              = link_to new_email_verification_path(@user.id) do
                |  Click here to
                - if @user.email_verification_expired?
                  |  verify your email address.
                - else
                  |  re-send your verification email.
          = f.email_field :email, class: "form-control #{@user.errors.any? ? (@user.errors.key?(:email) ? 'is-invalid' : 'is-valid') : '' }"
          - if @user.errors.key?(:email)
            .invalid-feedback-rails
              | Email #{@user.errors[:email][0]}

          = f.label :password, "New Password"
          = f.password_field :password, class: "form-control #{@user.errors.any? ? (@user.errors.key?(:password) ? 'is-invalid' : 'is-valid') : '' }"
          - if @user.errors.key?(:password)
            .invalid-feedback-rails
              | Password #{@user.errors[:password][0]}

          = f.label :password_confirmation, "New Password Confirmation"
          = f.password_field :password_confirmation, class: "form-control #{@user.errors.any? ? (@user.errors.key?(:password_confirmation) ? 'is-invalid' : 'is-valid') : '' }"
          - if @user.errors.key?(:password_confirmation)
            .invalid-feedback-rails
              | Password confirmation #{@user.errors[:password_confirmation][0]}

      .card
        .card-header
          b Enter your old password to confirm changes.

        .card-body
          = label_tag :oldpassword, "Old Password"
          = password_field_tag :oldpassword, '', class: "form-control #{@user.errors.any? ? (@user.errors.key?(:oldpassword) ? 'is-invalid' : 'is-valid') : '' }"
          - if @user.errors.key?(:oldpassword)
            .invalid-feedback-rails
              | #{@user.errors[:oldpassword][0]}

          = f.submit "Save Changes", class: "btn btn-primary"

    .col-lg-6
      .card
        .card-header
          b Site Settings

        .card-body
          = f.label :display_name
          = f.text_field :display_name, class: "form-control #{@user.errors.any? ? (@user.errors.key?(:display_name) ? 'is-invalid' : 'is-valid') : '' }"
          - if @user.errors.key?(:display_name)
            .invalid-feedback-rails
              | Display Name #{@user.errors[:display_name][0]}

          = f.label :avatar
          - unless @user.verified?
            br
            small style='color: grey;' You must verify your email address to upload an avatar.
          - avatar_field_class = "form-control #{@user.errors.any? ? (@user.errors.key?(:avatar) ? 'is-invalid' : 'is-valid') : '' }"
          - if @user.verified?
            = f.file_field :avatar, class: avatar_field_class
          - else
            = f.file_field :avatar, class: avatar_field_class, disabled: true
          - if @user.errors.key?(:avatar)
            .invalid-feedback-rails
              | Avatar #{@user.errors[:avatar][0]}

          = f.label :nsfw_level, "Content Filter Level"
          = f.select :nsfw_level, options_for_select([['Safe', 1], ['Questionable', 2], ['Explicit', 3]], @user.nsfw_level), {}, class: "form-control #{@user.errors.any? ? (@user.errors.key?(:nsfw_level) ? 'is-invalid' : 'is-valid') : '' }"
          - if @user.errors.key?(:nsfw_level)
            .invalid-feedback-rails
              | NSFW Level #{@user.errors[:nsfw_level][0]}
      .card
        .card-header
          b User Bio
        .card-body
          = f.text_area :bio, placeholder: "Write something about yourself. Markdown is supported. Max 200 characters.", maxlength: 200, onkeyup: "charcount(this.value)", id: "comment-box"
        span#charcount 0/200
.card
  .card-header
    b Following
  .card-body.followers
    - if @followers.any?
      - @followers.each do |f|
        div.following-table-cell
          div.followed-user-cell
            a href="/users/#{f.following.id}"
              = image_tag f.following.profile_picture
            a href="/users/#{f.following.id}"
              p #{f.following.username} 
          = render partial: "application/follower_button", locals: {user: f.following}
    - else
      b You aren't following anyone
